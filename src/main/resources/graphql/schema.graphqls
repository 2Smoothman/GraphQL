type Query {
    users: [User]
    userById(id: ID!): User
    me: User
    myProfile: Profile
    myBio: Bio
    bioById(id: ID!): Bio
    profileById(id: ID!): Profile
}

type Mutation {
    createUser(input: CreateUserInput!): User
    updateUser(id: ID!, input: UserInput!): User
    deleteUser(id: ID!): Boolean
    sendMessage(message: String!): Boolean
}

input UserInput {
    username: String!
    email: String!
    password: String!
    profile: ProfileInput!
    bio: BioInput!
}

input ProfileInput {
    firstName: String!
    lastName: String!
    aboutMe: String
    pictureUrl: String
    bio: BioInput
}

input BioInput {
    description: String!
    interests: String!
}

input CreateUserInput {
    username: String!
    email: String!
    password: String!
    profile: ProfileInput!
    bio: BioInput!
    recommendations: [ID]
    connections: [ID]
}

type User {
    id: ID!
    username: String!
    email: String!
    profile: Profile
    recommendations: [User]
    connections: [User]
    bio: Bio
}

type Profile {
    id: ID!
    firstName: String!
    lastName: String!
    aboutMe: String
    pictureUrl: String
    bio: Bio
    user: User
}

type Bio {
    id: ID!
    description: String
    interests: String
    profile: Profile
}

type Subscription {
    userCreated: User
    userUpdated: User
    profileUpdated: Profile
    messageReceived: String
} 